version: '3.8'
services:

  tg_bot:
    container_name: tg_bot
    build: .
    command: python start_bot.py
    environment:
      - DOCKER=True
      - DB_USER=$DB_USER
      - DB_PASSWORD=$DB_PASSWORD
      - DB_NAME=$DB_NAME
      - DB_HOST=database
      - BOT_TOKEN=$BOT_TOKEN
      - ADMIN=$ADMIN
      - REDIS_HOST=redis
      - DEBUG=false
    restart: unless-stopped
    volumes:
      - "./:/app"
      - "./logs:/app/logs"
    depends_on:
      - django_admin
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "25m"
        max-file: "2"

  django_admin:
    container_name: django_admin
    build: .
    command: >
      sh -c "python start_admin.py collectstatic --noinput
             python start_admin.py migrate
             gunicorn --workers 2 --timeout 1600 --bind 0.0.0.0:8000 admin.admin.wsgi --reload"
    environment:
      - DOCKER=True
      - DB_USER=$DB_USER
      - DB_PASSWORD=$DB_PASSWORD
      - DB_NAME=$DB_NAME
      - DB_HOST=database
      - DEBUG=false
      - SECRET_KEY=$SECRET_KEY
    ports:
      - "8000:8000"
    restart: unless-stopped
    volumes:
      - "./static_volume:/app/admin/static"
      - "./logs:/app/logs"
    depends_on:
        database:
          condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "25m"
        max-file: "2"

  database:
    image: mysql:8
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    container_name: database
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=$DB_PASSWORD
      - MYSQL_USER=$DB_USER
      - MYSQL_DATABASE=$DB_NAME
      - MYSQL_PASSWORD=$DB_PASSWORD
    ports:
      - "3306:3306"
    volumes:
      - "./database:/var/lib/mysql"
    healthcheck:
      test: mysql --user=$$MYSQL_USER --password=$$MYSQL_PASSWORD -e 'SHOW DATABASES;'
      timeout: 30s
      interval: 15s
      retries: 3

  redis:
    image: redis:7.0.5-alpine
    container_name: redis
    command: redis-server --appendonly yes
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - "./redis_data:/data"

  nginx:
    build: ./nginx
    volumes:
      - "./static_volume:/app/admin/static"
    ports:
      - "8031:80"
    depends_on:
      - django_admin
    logging:
      driver: "json-file"
      options:
        max-size: "25m"
        max-file: "2"
